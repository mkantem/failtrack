import { c as createComponent, r as renderTemplate, a as addAttribute, m as maybeRenderHead, b as renderComponent } from '../../chunks/astro/server_CAgZhzEv.mjs';
import 'kleur/colors';
import 'html-escaper';
import { $ as $$Navbar } from '../../chunks/Navbar_CvTHXCWi.mjs';
export { renderers } from '../../renderers.mjs';

var __freeze = Object.freeze;
var __defProp = Object.defineProperty;
var __template = (cooked, raw) => __freeze(__defProp(cooked, "raw", { value: __freeze(raw || cooked.slice()) }));
var _a;
const $$Browse = createComponent(async ($$result, $$props, $$slots) => {
  return renderTemplate(_a || (_a = __template(["", " ", '<main class="max-w-3xl mx-auto p-4"> <h1 class="text-2xl font-bold mb-4">', '</h1> <form id="searchForm" class="flex flex-wrap gap-2 mb-4"', '> <input id="keyword" type="text"', ' class="flex-1 p-2 border rounded"> <select id="langFilter" class="p-2 border rounded"> <option value="">', '</option> <option value="en">English</option> <option value="fr">Fran\xE7ais</option> </select> <button type="button" class="px-4 py-2 bg-green-600 text-white rounded"', ">", '</button> </form> <div id="failuresList"> <!-- FailureCard list will go here --> </div> <div class="flex justify-between mt-4"> <button id="prevPage" class="px-3 py-1 bg-gray-200 rounded"', '>Prev</button> <button id="nextPage" class="px-3 py-1 bg-gray-200 rounded"', ">Next</button> </div> <script type=\"module\">\n    let page = 1;\n    async function fetchFailures() {\n      const keyword = document.getElementById('keyword').value;\n      const language = document.getElementById('langFilter').value;\n      const res = await fetch(`/api/failures?page=${page}&keyword=${encodeURIComponent(keyword)}&language=${language}`);\n      const data = await res.json();\n      const list = document.getElementById('failuresList');\n      list.innerHTML = '';\n      if (data.length === 0) {\n        list.innerHTML = `<p class='text-gray-500'>{import('../../locales/en.json').then(m => m.browse.noResults)}</p>`;\n      } else {\n        data.forEach(failure => {\n          const card = document.createElement('div');\n          card.innerHTML = `<article class='border rounded p-4 mb-4 bg-white dark:bg-gray-800 shadow'>\n            <p class='mb-2 text-lg'>${failure.story}</p>\n            <div class='flex flex-wrap gap-2 text-sm text-gray-600 dark:text-gray-300 mb-2'>\n              ${failure.tags ? `<span><strong>Tags:</strong> ${failure.tags}</span>` : ''}\n              ${failure.discipline ? `<span><strong>Discipline:</strong> ${failure.discipline}</span>` : ''}\n              ${failure.year ? `<span><strong>Year:</strong> ${failure.year}</span>` : ''}\n              ${failure.pseudonym ? `<span><strong>Pseudonym:</strong> ${failure.pseudonym}</span>` : ''}\n              <span><strong>Language:</strong> ${failure.language}</span>\n              <span><strong>Date:</strong> ${failure.created_at}</span>\n            </div>\n          </article>`;\n          list.appendChild(card);\n        });\n      }\n    }\n    \n    async function fetchRandom() {\n      const res = await fetch('/api/random');\n      const failure = await res.json();\n      const list = document.getElementById('failuresList');\n      list.innerHTML = '';\n      if (failure.error) {\n        list.innerHTML = `<p class='text-gray-500'>{import('../../locales/en.json').then(m => m.browse.noResults)}</p>`;\n      } else {\n        const card = document.createElement('div');\n        card.innerHTML = `<article class='border rounded p-4 mb-4 bg-white dark:bg-gray-800 shadow'>\n          <p class='mb-2 text-lg'>${failure.story}</p>\n          <div class='flex flex-wrap gap-2 text-sm text-gray-600 dark:text-gray-300 mb-2'>\n            ${failure.tags ? `<span><strong>Tags:</strong> ${failure.tags}</span>` : ''}\n            ${failure.discipline ? `<span><strong>Discipline:</strong> ${failure.discipline}</span>` : ''}\n            ${failure.year ? `<span><strong>Year:</strong> ${failure.year}</span>` : ''}\n            ${failure.pseudonym ? `<span><strong>Pseudonym:</strong> ${failure.pseudonym}</span>` : ''}\n            <span><strong>Language:</strong> ${failure.language}</span>\n            <span><strong>Date:</strong> ${failure.created_at}</span>\n          </div>\n        </article>`;\n        list.appendChild(card);\n      }\n    }\n    function prevPage() { if (page > 1) { page--; fetchFailures(); } }\n    function nextPage() { page++; fetchFailures(); }\n    fetchFailures();\n    document.getElementById('searchForm').addEventListener('submit', e => { e.preventDefault(); page = 1; fetchFailures(); });\n    document.getElementById('prevPage').addEventListener('click', prevPage);\n    document.getElementById('nextPage').addEventListener('click', nextPage);\n  <\/script> </main>"], ["", " ", '<main class="max-w-3xl mx-auto p-4"> <h1 class="text-2xl font-bold mb-4">', '</h1> <form id="searchForm" class="flex flex-wrap gap-2 mb-4"', '> <input id="keyword" type="text"', ' class="flex-1 p-2 border rounded"> <select id="langFilter" class="p-2 border rounded"> <option value="">', '</option> <option value="en">English</option> <option value="fr">Fran\xE7ais</option> </select> <button type="button" class="px-4 py-2 bg-green-600 text-white rounded"', ">", '</button> </form> <div id="failuresList"> <!-- FailureCard list will go here --> </div> <div class="flex justify-between mt-4"> <button id="prevPage" class="px-3 py-1 bg-gray-200 rounded"', '>Prev</button> <button id="nextPage" class="px-3 py-1 bg-gray-200 rounded"', ">Next</button> </div> <script type=\"module\">\n    let page = 1;\n    async function fetchFailures() {\n      const keyword = document.getElementById('keyword').value;\n      const language = document.getElementById('langFilter').value;\n      const res = await fetch(\\`/api/failures?page=\\${page}&keyword=\\${encodeURIComponent(keyword)}&language=\\${language}\\`);\n      const data = await res.json();\n      const list = document.getElementById('failuresList');\n      list.innerHTML = '';\n      if (data.length === 0) {\n        list.innerHTML = \\`<p class='text-gray-500'>{import('../../locales/en.json').then(m => m.browse.noResults)}</p>\\`;\n      } else {\n        data.forEach(failure => {\n          const card = document.createElement('div');\n          card.innerHTML = \\`<article class='border rounded p-4 mb-4 bg-white dark:bg-gray-800 shadow'>\n            <p class='mb-2 text-lg'>\\${failure.story}</p>\n            <div class='flex flex-wrap gap-2 text-sm text-gray-600 dark:text-gray-300 mb-2'>\n              \\${failure.tags ? \\`<span><strong>Tags:</strong> \\${failure.tags}</span>\\` : ''}\n              \\${failure.discipline ? \\`<span><strong>Discipline:</strong> \\${failure.discipline}</span>\\` : ''}\n              \\${failure.year ? \\`<span><strong>Year:</strong> \\${failure.year}</span>\\` : ''}\n              \\${failure.pseudonym ? \\`<span><strong>Pseudonym:</strong> \\${failure.pseudonym}</span>\\` : ''}\n              <span><strong>Language:</strong> \\${failure.language}</span>\n              <span><strong>Date:</strong> \\${failure.created_at}</span>\n            </div>\n          </article>\\`;\n          list.appendChild(card);\n        });\n      }\n    }\n    \n    async function fetchRandom() {\n      const res = await fetch('/api/random');\n      const failure = await res.json();\n      const list = document.getElementById('failuresList');\n      list.innerHTML = '';\n      if (failure.error) {\n        list.innerHTML = \\`<p class='text-gray-500'>{import('../../locales/en.json').then(m => m.browse.noResults)}</p>\\`;\n      } else {\n        const card = document.createElement('div');\n        card.innerHTML = \\`<article class='border rounded p-4 mb-4 bg-white dark:bg-gray-800 shadow'>\n          <p class='mb-2 text-lg'>\\${failure.story}</p>\n          <div class='flex flex-wrap gap-2 text-sm text-gray-600 dark:text-gray-300 mb-2'>\n            \\${failure.tags ? \\`<span><strong>Tags:</strong> \\${failure.tags}</span>\\` : ''}\n            \\${failure.discipline ? \\`<span><strong>Discipline:</strong> \\${failure.discipline}</span>\\` : ''}\n            \\${failure.year ? \\`<span><strong>Year:</strong> \\${failure.year}</span>\\` : ''}\n            \\${failure.pseudonym ? \\`<span><strong>Pseudonym:</strong> \\${failure.pseudonym}</span>\\` : ''}\n            <span><strong>Language:</strong> \\${failure.language}</span>\n            <span><strong>Date:</strong> \\${failure.created_at}</span>\n          </div>\n        </article>\\`;\n        list.appendChild(card);\n      }\n    }\n    function prevPage() { if (page > 1) { page--; fetchFailures(); } }\n    function nextPage() { page++; fetchFailures(); }\n    fetchFailures();\n    document.getElementById('searchForm').addEventListener('submit', e => { e.preventDefault(); page = 1; fetchFailures(); });\n    document.getElementById('prevPage').addEventListener('click', prevPage);\n    document.getElementById('nextPage').addEventListener('click', nextPage);\n  <\/script> </main>"])), renderComponent($$result, "Navbar", $$Navbar, {}), maybeRenderHead(), import('../../chunks/en_CK7tc_AC.mjs').then((m) => m.browse.title), addAttribute((e) => {
    e.preventDefault();
    fetchFailures();
  }, "on:submit"), addAttribute(import('../../chunks/en_CK7tc_AC.mjs').then((m) => m.browse.searchPlaceholder), "placeholder"), import('../../chunks/en_CK7tc_AC.mjs').then((m) => m.browse.filterLanguage), addAttribute(fetchRandom, "on:click"), import('../../chunks/en_CK7tc_AC.mjs').then((m) => m.browse.randomButton), addAttribute(prevPage, "on:click"), addAttribute(nextPage, "on:click"));
}, "C:/Users/ISH/Documents/GitHub/failtrack/--typescript/src/pages/en/browse.astro", void 0);

const $$file = "C:/Users/ISH/Documents/GitHub/failtrack/--typescript/src/pages/en/browse.astro";
const $$url = "/en/browse";

const _page = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
  __proto__: null,
  default: $$Browse,
  file: $$file,
  url: $$url
}, Symbol.toStringTag, { value: 'Module' }));

const page = () => _page;

export { page };
